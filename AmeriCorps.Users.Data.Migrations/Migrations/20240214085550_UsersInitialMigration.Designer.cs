// <auto-generated />
using System;
using AmeriCorps.Users.Data.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmeriCorps.Users.Data.Migrations.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20240214085550_UsersInitialMigration")]
    partial class UsersInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Address", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsForeign")
                        .HasColumnType("boolean");

                    b.Property<bool>("MovingWithinSixMonths")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.CommunicationMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPreferred")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CommunicationMethod");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("City")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAttendedFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateAttendedTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DegreeCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("DegreeTypePursued")
                        .HasColumnType("integer");

                    b.Property<int>("Institution")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MajorAreaOfStudy")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<string>("PickListId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SpeakingAbility")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WritingAbility")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Relative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("HighestEducationLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Relative");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PickListId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Searchable")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Address", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.CommunicationMethod", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", null)
                        .WithMany("CommunicationMethods")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Education", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", null)
                        .WithMany("Education")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Language", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", null)
                        .WithMany("Languages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Relative", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", null)
                        .WithMany("Relatives")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.Skill", b =>
                {
                    b.HasOne("AmeriCorps.Users.Data.Core.User", null)
                        .WithMany("Skills")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.User", b =>
                {
                    b.OwnsOne("AmeriCorps.Users.Data.Core.About", "About", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<string>("CitizenshipStatus")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CitizenshipStatus");

                            b1.Property<string>("Ethnicity")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Ethnicity");

                            b1.Property<int>("FamilyCombinedIncome")
                                .HasColumnType("integer")
                                .HasColumnName("FamilyCombinedIncome");

                            b1.Property<int>("Gender")
                                .HasColumnType("integer")
                                .HasColumnName("Gender");

                            b1.Property<bool>("HasValidGovtDriversLicense")
                                .HasColumnType("boolean")
                                .HasColumnName("HasValidGovtDriversLicense");

                            b1.Property<string>("Race")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Race");

                            b1.Property<string>("UnexpectedExpenseConfidence")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("UnexpectedExpenseConfidence");

                            b1.Property<string>("VeteranStatus")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("VeteranStatus");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("AmeriCorps.Users.Data.Core.BasicInfo", "BasicInfo", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("DateOfBirth");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("LastName");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("text")
                                .HasColumnName("MiddleName");

                            b1.Property<string>("PreferredName")
                                .HasColumnType("text")
                                .HasColumnName("PreferredName");

                            b1.Property<string>("Prefix")
                                .HasColumnType("text")
                                .HasColumnName("Prefix");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("UserName");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("About");

                    b.Navigation("BasicInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("AmeriCorps.Users.Data.Core.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("CommunicationMethods");

                    b.Navigation("Education");

                    b.Navigation("Languages");

                    b.Navigation("Relatives");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
